@model RealEstate.Models.Project

@{
    ViewBag.Title = "Details";
}


<h2>@Html.Raw(ViewBag.ProjectTitle)</h2>

<div>
    <hr />

    @{
        var list = ViewBag.ProgList;
        if (list.Count != 0)
        {

            <div class="w3-content w3-display-container" id="container-of-details-image">

                @{
                    foreach (var item in ViewBag.ProgList)
                    {
                        var base64 = Convert.ToBase64String(item);
                        //convert base64 string to image format and store into imgSrc
                        var imgSrc = String.Format("data:image/gif;base64,{0}", base64);
                        <img class="mySlides" src='@imgSrc' width="550" height="450" />
                    }

                    <button class="w3-button w3-black w3-display-left" onclick="plusDivs(-1)">&#10094;</button>
                    <button class="w3-button w3-black w3-display-right" onclick="plusDivs(1)">&#10095;</button>
                }
            </div>
                    }
                    else
                    {
                        <img src='~/Content/Images/no-house-image-available.jpg' width="550" height="450" />
                    }
    }
    

    <script>
var slideIndex = 1;
showDivs(slideIndex);

function plusDivs(n) {
  showDivs(slideIndex += n);
}

function showDivs(n) {
  var i;
  var x = document.getElementsByClassName("mySlides");
  if (n > x.length) {slideIndex = 1}
  if (n < 1) {slideIndex = x.length}
  for (i = 0; i < x.length; i++) {
     x[i].style.display = "none";
  }
  x[slideIndex-1].style.display = "block";
}
    </script>

    
    <dl class="dl-horizontal">

        <dt>
            @Html.DisplayName(RealEstate.Resources.ProjectModelTexts.ProjectModelTexts.Title)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Title)
        </dd>
        <dt>
            @Html.DisplayName(RealEstate.Resources.ProjectModelTexts.ProjectModelTexts.TypeOfBuilding)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.TypeOfBuilding)
        </dd>

        <dt>
            @Html.DisplayName(RealEstate.Resources.ProjectModelTexts.ProjectModelTexts.YearBuilt)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Year)
        </dd>

        <dt>
            @Html.DisplayName(RealEstate.Resources.ProjectModelTexts.ProjectModelTexts.AreaSize)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Area)
        </dd>

        <dt>
            @Html.DisplayName(RealEstate.Resources.ProjectModelTexts.ProjectModelTexts.PlotArea)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.PlotArea)
        </dd>

        <dt>
            @Html.DisplayName(RealEstate.Resources.ProjectModelTexts.ProjectModelTexts.NumberOfRooms)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.NumberOfRooms)
        </dd>

        <dt>
            @Html.DisplayName(RealEstate.Resources.ProjectModelTexts.ProjectModelTexts.Price)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Price)
        </dd>
    </dl>

    <h3>@Html.DisplayName(RealEstate.Resources.ProjectModelTexts.ProjectModelTexts.AdditionalFacilities)</h3>
    <article>@Html.DisplayFor(model => model.AdditionalFacilities)</article>

    <h3>@Html.DisplayName(RealEstate.Resources.ProjectModelTexts.ProjectModelTexts.AdditionalInformation)</h3>
    <article>@Html.DisplayFor(model => model.AdditionalInformation)</article>
    
</div>
<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.ProjectId }) |
    @Html.ActionLink("Back to List", "Index")
</p>
