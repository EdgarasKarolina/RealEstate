@model RealEstate.Models.Project

@{
    ViewBag.Title = "Edit";
}

<h2>@Html.DisplayName(RealEstate.Resources.ProjectModelTexts.ProjectModelTexts.EditProject)</h2>


@using (Html.BeginForm("Edit", "Projects", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ProjectId)

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TypeOfBuilding, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TypeOfBuilding, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TypeOfBuilding, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Year, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Year, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Year, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Area, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Area, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Area, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PlotArea, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PlotArea, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PlotArea, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NumberOfFloors, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NumberOfFloors, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NumberOfFloors, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NumberOfRooms, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NumberOfRooms, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NumberOfRooms, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AdditionalFacilities, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.AdditionalFacilities, new { @class = "form-control text-area-create-form" })
                @Html.ValidationMessageFor(model => model.AdditionalFacilities, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AdditionalInformation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.AdditionalInformation, new { @class = "form-control text-area-create-form" })
                @Html.ValidationMessageFor(model => model.AdditionalInformation, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row">
            <div class="col-md-6">
                @{
                    var pictures = ViewBag.ProgList;

                    if (pictures.Count != 0)
                    {
                        <h2>@Html.DisplayName(RealEstate.Resources.ProjectModelTexts.ProjectModelTexts.UploadedImages)</h2>

                        foreach (var item in ViewBag.ProgList)
                        {
                            var base64 = Convert.ToBase64String(item);
                            var imgSrc = String.Format("data:image/gif;base64,{0}", base64);
                            <div>
                                <img src='@imgSrc' width="300" height="200" /> <br />
                            </div>
                        }

                        <div style="width: 80px; margin-top: 10px">
                            @Html.ActionLink(RealEstate.Resources.ProjectModelTexts.ProjectModelTexts.RemoveImages, "DeleteImages", new { id = ViewBag.IdOfProject }, new { @class = "btn btn-primary btn-large" })
                        </div>
                    }
                    else
                    {
                        <h2>@Html.DisplayName(RealEstate.Resources.ProjectModelTexts.ProjectModelTexts.NoImagesUploaded)</h2>
                    }


                    /* <div class="form-group"></div>
                     <input onchange="loadFile1(event)"  type="file" name="images" id="file" />
                     <img id="output10" width="200" height="150" src="@pictures.ElementAt(0)" /> */
                }
            </div>

            <div class="col-md-6">
                <h3>@Html.DisplayName(RealEstate.Resources.ProjectModelTexts.ProjectModelTexts.AddNewImages)</h3>
                <div class="form-group">
                    <input onchange="loadFile1(event)" type="file" name="images" id="file" />
                    <img id="output1" width="300" height="200" />
                </div>
                <div class="form-group">
                    <input onchange="loadFile2(event)" type="file" name="images" id="file" />
                    <img id="output2" width="300" height="200" />
                </div>
                <div class="form-group">
                    <input onchange="loadFile3(event)" type="file" name="images" id="file" />
                    <img id="output3" width="300" height="200" />
                </div>
            </div>
        </div>

        <script>
            var loadFile1 = function (event) {
                var output1 = document.getElementById('output1');
                output1.src = URL.createObjectURL(event.target.files[0]);
            };

            var loadFile2 = function (event) {
                var output2 = document.getElementById('output2');
                output2.src = URL.createObjectURL(event.target.files[0]);
            };

            var loadFile3 = function (event) {
                var output3 = document.getElementById('output3');
                output3.src = URL.createObjectURL(event.target.files[0]);
            };
        </script>


        <div style="margin-top:30px;">
            <div style="display:inline">
                <a class="btn btn-primary" href="@Url.Action("Index", "Projects")">
                    <div class="be-in-middle">
                        <span class="glyphicon glyphicon-arrow-left"></span> 
                        @Html.DisplayName(RealEstate.Resources.ProjectModelTexts.
                                     ProjectModelTexts.BackToProjects)
                    </div>
                </a>
            </div>
            <div style="display:inline">
                <input type="submit" value="Save" class="btn btn-success edit-view-save-button" />
            </div>
        </div>

    </div>
            }



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
