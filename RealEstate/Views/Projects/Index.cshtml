@model IEnumerable<RealEstate.Models.Project>

@{
    ViewBag.Title = "Index";
}

<script type="text/javascript">

    function setInputFieldsToDefault()
    {
        document.getElementById("from-year-textbox").value = "";
        document.getElementById("to-year-textbox").value = "";
        document.getElementById("from-price-textbox").value = "";
        document.getElementById("to-price-textbox").value = "";
    }

</script>

<p>
    
    @using (Html.BeginForm("Index", "Projects", FormMethod.Get))

    {
    <p>
        <div id="search-inputs-div">
           
            @Html.DisplayName(RealEstate.Resources.ProjectModelTexts.ProjectModelTexts.TypeOfBuilding) @Html.DropDownList("typeOfBuilding", RealEstate.Resources.ProjectModelTexts.ProjectModelTexts.All)
            <br />
            @Html.DisplayName(RealEstate.Resources.ProjectModelTexts.ProjectModelTexts.YearBuilt) @Html.TextBox("fromYear", "", new { @placeholder = RealEstate.Resources.ProjectModelTexts.ProjectModelTexts.From, @id = "from-year-textbox" })
            @Html.TextBox("toYear", "", new { @placeholder = RealEstate.Resources.ProjectModelTexts.ProjectModelTexts.To, @id = "to-year-textbox" })
            <br />
            @Html.DisplayName(RealEstate.Resources.ProjectModelTexts.ProjectModelTexts.Price) @Html.TextBox("fromPrice", "", new { placeholder = RealEstate.Resources.ProjectModelTexts.ProjectModelTexts.From, @id = "from-price-textbox" })
            @Html.TextBox("toPrice", "", new { placeholder = RealEstate.Resources.ProjectModelTexts.ProjectModelTexts.To, @id = "to-price-textbox" })
            <br />
        </div>

        @* <input type="submit" value="Filter" class="whatever"/> *@
        <div class="row">
            <div class="col-md-6">
                <button type="submit" value="Filter" class="btn btn-primary btn-small btn-block"> <span class="glyphicon glyphicon-search"></span>Search</button>
            </div>
            <div class="col-md-6">
                <button type="reset"    class="btn btn-success btn-small btn-block" > <span class="glyphicon glyphicon-remove-sign"></span>Clear All</button>

            </div>


        </div>
    </p>

    }
</p>

<script> </script>
@if (Request.IsAuthenticated == true && ViewContext.HttpContext.User.IsInRole("Admin"))
{
    <div>
        <a class="btn btn-success" href="@Url.Action("Create", "Projects")">
            <div class="be-in-middle">
                @Html.DisplayName(RealEstate.Resources.ProjectModelTexts.ProjectModelTexts.CreateNewProject)
            </div>
        </a>
    </div>
}
<table class="table">
    <tr>
        <th>
            @Html.DisplayName(RealEstate.Resources.ProjectModelTexts.ProjectModelTexts.Foto)
        </th>
        <th>
            @Html.DisplayName(RealEstate.Resources.ProjectModelTexts.ProjectModelTexts.Title)
        </th>
        <th>
            @Html.DisplayName(RealEstate.Resources.ProjectModelTexts.ProjectModelTexts.TypeOfBuilding)
        </th>
        <th>
            @Html.DisplayName(RealEstate.Resources.ProjectModelTexts.ProjectModelTexts.YearBuilt)
        </th>
        <th>
            @Html.DisplayName(RealEstate.Resources.ProjectModelTexts.ProjectModelTexts.AreaSize)
        </th>
        <th>
            @Html.DisplayName(RealEstate.Resources.ProjectModelTexts.ProjectModelTexts.Price)
        </th>
        <th>
            @Html.DisplayName(RealEstate.Resources.ProjectModelTexts.ProjectModelTexts.AdditionalInformation)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {

    <tr> 
            <td>
                @{
                    var listOfStrings = new List<byte[]>();
                    if (ViewBag.ImagesList != null)
                    {
                        foreach (var image in ViewBag.ImagesList)
                        {
                            if (image.ProjectBelongsId == item.ProjectId)
                            {
                                listOfStrings.Add(image.ImageData);
                            }
                        }
                        if (listOfStrings.Count != 0)
                        {
                            var firstImage = listOfStrings.First<byte[]>();
                            var base64 = Convert.ToBase64String(firstImage);
                            var imgSrc = String.Format("data:image/gif;base64,{0}", base64);

                            <a href="@Url.Action("Details", "Projects", new { id = item.ProjectId })">
                                <img src='@imgSrc' style="width:180px;height:140px;" />
                            </a>
                        }
                    }
                }
            </td>
            <td>
                <a href="@Url.Action("Details", "Projects", new { id = item.ProjectId })">
                    @Html.DisplayFor(modelItem => item.Title)
                </a>
            </td>
            <td>
            @Html.DisplayFor(modelItem => item.TypeOfBuilding)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Year)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Area)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.AdditionalInformation)
            </td>
            <td>
                @if (Request.IsAuthenticated == true)
                {
                    @Html.ActionLink("Edit", "Edit", new { id = item.ProjectId })

                }

                @Html.ActionLink("Details", "Details", new { id = item.ProjectId }) |

                @if (Request.IsAuthenticated == true)
                {
                    @Html.ActionLink("Delete", "Delete", new { id = item.ProjectId })

                }

            </td>
</tr>
}

</table>
